/obj/item/reagent_containers/inhaler
	name = "inhaler"
	desc = "A generic inhaler."
	icon = ''
	item_state = ""
	lefthand_file = ''
	righthand_file = ''
	icon_state = "hypo"
	amount_per_transfer_from_this = 5
	volume = 25
	possible_transfer_amounts = list()
	resistance_flags = ACID_PROOF
	slot_flags = ITEM_SLOT_BELT
	var/ignore_flags = 0
	var/infinite = FALSE

/obj/item/reagent_containers/inhaler/attack_paw(mob/user)
	return attack_hand(user)

/obj/item/reagent_containers/inhaler/attack(mob/living/M, mob/user)
	if(!reagents.total_volume)
		to_chat(user, "<span class='warning'>[src] is empty!</span>")
		return
	if(!iscarbon(M))
		return

	//Always log attemped injects for admins
	var/list/injected = list()
	for(var/datum/reagent/R in reagents.reagent_list)
		injected += R.name
	var/contained = english_list(injected)
	log_combat(user, M, "attempted to force", src, "to use in inhaler", "([contained])")

	if(reagents.total_volume && (ignore_flags || M.can_inject(user, 1))) // Ignore flag should be checked first or there will be an error message.
		to_chat(M, "<span class='warning'>You feel a tiny prick!</span>")
		to_chat(user, "<span class='notice'>You inject [M] with [src].</span>")

		var/fraction = min(amount_per_transfer_from_this/reagents.total_volume, 1)
		reagents.reaction(M, INJECT, fraction)
		if(M.reagents)
			var/trans = 0
			if(!infinite)
				trans = reagents.trans_to(M, amount_per_transfer_from_this)
			else
				trans = reagents.copy_to(M, amount_per_transfer_from_this)

			to_chat(user, "<span class='notice'>[trans] unit\s inhaled.  [reagents.total_volume] unit\s remaining in [src].</span>")


			log_combat(user, M, "injected", src, "([contained])")
